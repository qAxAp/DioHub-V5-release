--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v86=v2(v0(v30,16));if v19 then local v111=v5(v86,v19);v19=nil;return v111;else return v86;end end end);local function v20(v31,v32,v33) if v33 then local v87=(v31/((5 -3)^(v32-(2 -(1 + 0)))))%((3 -1)^(((v33-(2 -1)) -(v32-1)) + 1)) ;return v87-(v87%1) ;else local v88=619 -(555 + 64) ;local v89;while true do if (v88==(931 -(857 + 74))) then v89=((1447 -(282 + 595)) -((2004 -(1523 + 114)) + 201))^(v32-((834 + 94) -(214 + 713))) ;return (((v31%(v89 + v89))>=v89) and 1) or (0 + (0 -0)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=(214 -97) -(32 + 85) ;local v36;local v37;while true do if (v35==(1066 -(68 + 997))) then return (v37 * 256) + v36 ;end if (v35==(0 + 0)) then v36,v37=v1(v16,v18,v18 + (1272 -(226 + 1044)) );v18=v18 + (4 -2) ;v35=4 -3 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (353 -(87 + 263)) );v18=v18 + (184 -(67 + 84 + 29)) ;return (v41 * 16777216) + (v40 * (48056 + (69474 -51994))) + (v39 * (628 -372)) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=953 -((1661 -(814 + 45)) + 150) ;local v45=(v20(v43,2 -1 ,36 -16 ) * ((444 -(416 + 26))^32)) + v42 ;local v46=v20(v43,(39 -23) + 5 ,1028 -(915 + 82) );local v47=((v20(v43,90 -(4 + 54) )==(1 -0)) and  -(1 + 0)) or (1 -(0 + 0)) ;if (v46==(1187 -(1069 + 118))) then if (v45==((885 -(261 + 624)) -(0 -0))) then return v47 * (0 -0) ;else v46=1 + (1080 -(1020 + 60)) ;v44=0;end elseif (v46==(2819 -(201 + 571))) then return ((v45==(1138 -(116 + 1022))) and (v47 * ((1 + 0)/((1423 -(630 + 793)) -(0 -0))))) or (v47 * NaN) ;end return v8(v47,v46-(1015 + 8) ) * (v44 + (v45/((793 -(368 + 423))^(163 -111)))) ;end local function v25(v48) local v49;if  not v48 then local v90=0 -(1913 -(1789 + 124)) ;while true do if (v90==(0 + 0)) then v48=v23();if (v48==0) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(3 -2) );v18=v18 + v48 ;local v50={};for v66=1748 -((1526 -(745 + 21)) + 987) , #v49 do v50[v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v91,v92,v93,v94,v95,v96,v97,v98) local v91=(function() return 0;end)();local v92=(function() return;end)();local v93=(function() return;end)();while true do if (v91~= #",") then else if (v92== #"\\") then v93=(function() return v94()~=(1767 -(308 + 1459)) ;end)();elseif (v92==2) then v93=(function() return v95();end)();elseif (v92== #"-19") then v93=(function() return v96();end)();end v97[v98]=(function() return v93;end)();break;end if (v91~=(0 -0)) then else local v117=(function() return 0 -0 ;end)();local v118=(function() return;end)();while true do if (v117==0) then v118=(function() return 0;end)();while true do if (v118~=(0 -0)) then else v92=(function() return v94();end)();v93=(function() return nil;end)();v118=(function() return 868 -(550 + 317) ;end)();end if (1~=v118) then else v91=(function() return  #"]";end)();break;end end break;end end end end return v91,v92,v93,v94,v95,v96,v97,v98;end;end)();local v52=(function() return function(v99,v100,v101) local v102=(function() return 0;end)();local v103=(function() return;end)();while true do if (v102==(0 -0)) then v103=(function() return 0 -0 ;end)();while true do if (0~=v103) then else local v123=(function() return 0;end)();local v124=(function() return;end)();while true do if (v123~=0) then else v124=(function() return 0;end)();while true do if (v124~=0) then else v99[v100-#"<" ]=(function() return v101();end)();return v99,v100,v101;end end break;end end end end break;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #"/",v57 do FlatIdent_7126A,Type,Cons,v21,v24,v25,v58,v68=(function() return v51(FlatIdent_7126A,Type,Cons,v21,v24,v25,v58,v68);end)();end v56[ #"91("]=(function() return v21();end)();for v69= #"<",v23() do local v70=(function() return v21();end)();if (v20(v70, #"|", #" ")~=0) then else local v107=(function() return 0;end)();local v108=(function() return;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (v107~=1) then else local v119=(function() return 0;end)();while true do if (v119~=0) then else v110=(function() return {v22(),v22(),nil,nil};end)();if (v108==(1665 -(970 + 695))) then local v128=(function() return 0 -0 ;end)();local v129=(function() return;end)();while true do if (v128~=0) then else v129=(function() return 1990 -(582 + 1408) ;end)();while true do if (v129==0) then v110[ #"91("]=(function() return v22();end)();v110[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v108== #"{") then v110[ #"xxx"]=(function() return v23();end)();elseif (v108==(6 -4)) then v110[ #"nil"]=(function() return v23() -((2 -0)^16) ;end)();elseif (v108~= #"-19") then else local v212=(function() return 0;end)();local v213=(function() return;end)();while true do if (v212==(0 -0)) then v213=(function() return 1824 -(1195 + 629) ;end)();while true do if (v213==0) then v110[ #"xnx"]=(function() return v23() -((2 -0)^16) ;end)();v110[ #".dev"]=(function() return v22();end)();break;end end break;end end end v119=(function() return 242 -(187 + 54) ;end)();end if (1~=v119) then else v107=(function() return 782 -(162 + 618) ;end)();break;end end end if (v107~=(2 + 0)) then else if (v20(v109, #" ", #":")== #"[") then v110[2 + 0 ]=(function() return v58[v110[3 -1 ]];end)();end if (v20(v109,2 -0 ,1 + 1 )~= #"~") then else v110[ #"19("]=(function() return v58[v110[ #"asd"]];end)();end v107=(function() return 3;end)();end if (v107~=(1639 -(1373 + 263))) then else if (v20(v109, #"asd", #"19(")~= #"/") then else v110[ #"0313"]=(function() return v58[v110[ #"0313"]];end)();end v53[v69]=(function() return v110;end)();break;end if (v107==0) then local v121=(function() return 0;end)();local v122=(function() return;end)();while true do if (v121~=(1000 -(451 + 549))) then else v122=(function() return 0 + 0 ;end)();while true do if (v122==(1 -0)) then v107=(function() return 1;end)();break;end if (0==v122) then v108=(function() return v20(v70,2, #"gha");end)();v109=(function() return v20(v70, #"http",9 -3 );end)();v122=(function() return 1385 -(746 + 638) ;end)();end end break;end end end end end end for v71= #":",v23() do v54,v71,v28=(function() return v52(v54,v71,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[(733 -(16 + 716)) + 0 ];local v64=v60[3 -1 ];local v65=v60[3];return function(...) local v72=v63;local v73=v64;local v74=v65;local v75=v27;local v76=(1 -0) -0 ;local v77= -((439 -(11 + 86)) -(218 + (299 -176)));local v78={};local v79={...};local v80=v12("#",...) -((286 -(175 + 110)) + (0 -0)) ;local v81={};local v82={};for v104=0 + 0 ,v80 do if (v104>=v74) then v78[v104-v74 ]=v79[v104 + (217 -(42 + 174)) ];else v82[v104]=v79[v104 + 1 + 0 ];end end local v83=(v80-v74) + (561 -(306 + 254)) ;local v84;local v85;while true do v84=v72[v76];v85=v84[1 + (0 -0) ];if ((493<3893) and (v85<=18)) then if (v85<=((1811 -(503 + 1293)) -7)) then if (v85<=(1470 -(899 + 568))) then if ((v85<=(1 + 0)) or (1473>=3332)) then if (v85>(0 -0)) then local v130=(1683 -1080) -(268 + 335) ;local v131;local v132;local v133;local v134;while true do if (v130==(292 -(60 + 230))) then for v207=v131,v77 do v134=v134 + (573 -(309 + 117 + 146)) ;v82[v207]=v132[v134];end break;end if ((v130==(0 + 0)) or (4051<=1157)) then v131=v84[1 + 1 ];v132,v133=v75(v82[v131](v13(v82,v131 + (1457 -(282 + 1174)) ,v84[7 -4 ])));v130=812 -(569 + 242) ;end if ((v130==((1063 -(810 + 251)) -1)) or (1154<788)) then v77=(v133 + v131) -1 ;v134=0 + 0 ;v130=1026 -(706 + 318) ;end end else v82[v84[1253 -(721 + 530) ]]=v84[3];end elseif (v85>((884 + 389) -(945 + 326))) then local v137=0 -0 ;local v138;while true do if ((v137==(0 + 0)) or (1643>3379)) then v138=v84[(264 + 594) -(564 + 292) ];v82[v138](v13(v82,v138 + (701 -(271 + 429)) ,v84[3 + 0 ]));break;end end else v82[v84[306 -(220 + 24 + (593 -(43 + 490))) ]]={};end elseif (v85<=(1505 -(1408 + 92))) then if ((604<2881) and (v85==(1090 -(461 + (1358 -(711 + 22)))))) then local v140=v84[1290 -(993 + 295) ];v82[v140]=v82[v140](v13(v82,v140 + 1 + 0 ,v84[1174 -(418 + 753) ]));else v82[v84[1 + 1 ]]();end elseif (v85<=(1 + 5)) then v82[v84[1 + 1 ]]=v62[v84[1 + 2 ]];elseif ((v85>7) or (2803>4549) or (900==3377)) then v82[v84[2 + 0 ]][v84[532 -(406 + 123) ]]=v84[1142 -(782 + 356) ];else local v172=1769 -((6765 -5016) + 20) ;local v173;while true do if (v172==((859 -(240 + 619)) -0)) then v173=v84[1 + 1 ];v82[v173]=v82[v173](v13(v82,v173 + (1323 -(1249 + 73)) ,v77));break;end end end elseif ((4459>591) and (v85<=(5 + 2 + 6))) then if ((3398>=2395) and (v85<=10)) then if (v85==(1154 -(466 + 679))) then local v144=v84[4 -2 ];v82[v144](v13(v82,v144 + (2 -1) ,v84[1878 -(157 + 1718) ]));else v82[v84[2 + 0 ]]=v29(v73[v84[1903 -(106 + 1794) ]],nil,v62);end elseif (v85<=(4 + 7)) then v82[v84[(9 -3) -4 ]]=v62[v84[1 + 2 ]];elseif ((v85>(35 -23)) or (220>=3022) or (2183>=2824)) then v76=v84[7 -4 ];else v82[v84[2]]=v29(v73[v84[7 -4 ]],nil,v62);end elseif (v85<=(34 -(2 + 17))) then if (v85>(128 -((1748 -(1344 + 400)) + 110))) then v82[v84[3 -1 ]]=v84[587 -((462 -(255 + 150)) + 527) ];else for v167=v84[1429 -(33 + 8 + 1386) ],v84[106 -(17 + 86) ] do v82[v167]=nil;end end elseif (v85<=(1243 -(322 + 905))) then v82[v84[2 + 0 ]]();elseif ((1936==1936) and (2822==2822) and (v85>(37 -20))) then for v200=v84[5 -3 ],v84[169 -(122 + 44) ] do v82[v200]=nil;end else local v176=v84[2 -0 ];v82[v176]=v82[v176](v13(v82,v176 + (3 -2) ,v84[950 -(245 + 702) ]));end elseif (v85<=(22 + 5)) then if (v85<=(4 + 18)) then if (v85<=(40 -20)) then if (v85>(459 -(382 + 58))) then v82[v84[6 -4 ]]={};elseif (v82[v84[2]]==v84[69 -(30 + 35) ]) then v76=v76 + 1 + 0 ;else v76=v84[(675 + 585) -(1043 + 214) ];end elseif ((v85>((264 -202) -41)) or (1061==1857)) then v76=v84[11 -8 ];else local v152=v84[1214 -(323 + 889) ];local v153=v82[v84[7 -4 ]];v82[v152 + (581 -(361 + 219)) ]=v153;v82[v152]=v153[v84[(5471 -3777) -(1121 + 569) ]];end elseif (((2760>1364) and (v85<=(344 -(53 + 267)))) or (4832<4313)) then if ((4088>3874) and (v85==(706 -(483 + 200)))) then if ((4332==4332) and (v84[1465 -(1404 + 59) ]==v82[v84[1 + 3 ]])) then v76=v76 + (414 -(15 + 398)) ;else v76=v84[(2724 -(404 + 1335)) -(18 + 964) ];end else local v157=0 -0 ;local v158;local v159;while true do if ((v157==(1 + 0)) or (4902<=3595)) then v82[v158 + 1 + 0 ]=v159;v82[v158]=v159[v84[854 -(20 + 830) ]];break;end if (((0 -0)==v157) or (3852==293)) then v158=v84[(408 -(183 + 223)) + 0 ];v159=v82[v84[129 -(116 + 10) ]];v157=1 + 0 ;end end end elseif ((v85<=(763 -(542 + 196))) or (1559==4588)) then local v160=v84[3 -1 ];v82[v160]=v82[v160]();elseif (v85==(8 + 18)) then local v180=0 + 0 ;local v181;local v182;local v183;local v184;while true do if (v180==(1 + 1)) then for v219=v181,v77 do v184=v184 + (2 -1) ;v82[v219]=v182[v184];end break;end if (((2 -1)==v180) or (4484==788)) then v77=(v183 + v181) -1 ;v184=0 -0 ;v180=1553 -(1126 + 425) ;end if (v180==0) then v181=v84[407 -(118 + 287) ];v182,v183=v75(v82[v181](v13(v82,v181 + ((1 -0) -(0 + 0)) ,v84[11 -(3 + 5) ])));v180=1122 -(118 + 1003) ;end end else v82[v84[5 -3 ]][v84[3]]=v84[4];end elseif ((4568>=3907) and (v85<=((746 -(10 + 327)) -(142 + 235)))) then if (v85<=(131 -(72 + 30))) then if (v85>(7 + 21)) then do return;end else do return;end end elseif ((3999>=2900) and (v85<=(1007 -(553 + 424)))) then if ((v84[3 -1 ]==v82[v84[4 + 0 ]]) or (2525>4064)) then v76=v76 + 1 + 0 ;else v76=v84[2 + (339 -(118 + 220)) ];end elseif (v85>(14 + 17)) then v62[v84[1793 -(573 + 1217) ]]=v82[v84[2 + 0 ]];else v82[v84[4 -2 ]]=v82[v84[7 -(2 + 2) ]];end elseif ((4371==4371) and (v85<=(75 -41))) then if ((v85>(10 + 23)) or (266>4986)) then if (v82[v84[9 -7 ]]==v84[11 -7 ]) then v76=v76 + (754 -(239 + 514)) ;else v76=v84[2 + 1 ];end else v82[v84[1 + (450 -(108 + 341)) ]]=v82[v84[3]];end elseif (v85<=(1364 -(797 + 532))) then local v164=v84[2 -0 ];v82[v164]=v82[v164](v13(v82,v164 + (807 -(118 + 688)) ,v77));elseif ((1246<3470) and (v85>(27 + 5 + 4))) then local v193=(0 -0) + 0 ;local v194;while true do if ((4068>=972) and (v193==(0 -0))) then v194=v84[1204 -((1866 -(711 + 782)) + 829) ];v82[v194]=v82[v194]();break;end end else v62[v84[734 -(476 + 255) ]]=v82[v84[1132 -(369 + 761) ]];end v76=v76 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);